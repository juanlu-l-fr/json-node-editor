Funcionalidades core
- eliminar un nodo del json -> remove a | remove a.nested.array.other_nested.b
    V Si es un objeto, quitarlo. si no existe no decir nada
    V Si es un array quitarlo de todos los sub-objetos
    - Modo deep -> quitar ese nodo esté al nivel que esté
- Agregar un nodo | add a.nested = '{"a": "value", "b":["v1","v2"]}'
    V igual que antes, si la clave es un objeto la añade, pero si la clave es un array que lo añada en todos.

- Editar un nodo json | edit a.nested = "new value"
    V si a.nested está en un array que te lo edite en todos.


Otras que se me ocurren
 V map -> parecido a la extensión que ya tengo, que reciba una serie de claves y te de el mapping de ese json
    V Configurable -> sería ideal si pudieras configurarle determinados patrones, en mi caso las respuestas del autocomplete. 
        V Para que mapease por eso automáticamente o que te deje elegir de entre tus configs.
 V order -> ordena las claves del json por orden alfabéticos.

Tareas de bajo nivel    
